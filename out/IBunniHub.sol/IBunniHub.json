{"abi":[{"type":"function","name":"compound","inputs":[{"name":"key","type":"tuple","internalType":"struct BunniKey","components":[{"name":"pool","type":"address","internalType":"contract IUniswapV3Pool"},{"name":"tickLower","type":"int24","internalType":"int24"},{"name":"tickUpper","type":"int24","internalType":"int24"}]}],"outputs":[{"name":"addedLiquidity","type":"uint128","internalType":"uint128"},{"name":"amount0","type":"uint256","internalType":"uint256"},{"name":"amount1","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"deployBunniToken","inputs":[{"name":"key","type":"tuple","internalType":"struct BunniKey","components":[{"name":"pool","type":"address","internalType":"contract IUniswapV3Pool"},{"name":"tickLower","type":"int24","internalType":"int24"},{"name":"tickUpper","type":"int24","internalType":"int24"}]}],"outputs":[{"name":"token","type":"address","internalType":"contract IBunniToken"}],"stateMutability":"nonpayable"},{"type":"function","name":"deposit","inputs":[{"name":"params","type":"tuple","internalType":"struct IBunniHub.DepositParams","components":[{"name":"key","type":"tuple","internalType":"struct BunniKey","components":[{"name":"pool","type":"address","internalType":"contract IUniswapV3Pool"},{"name":"tickLower","type":"int24","internalType":"int24"},{"name":"tickUpper","type":"int24","internalType":"int24"}]},{"name":"amount0Desired","type":"uint256","internalType":"uint256"},{"name":"amount1Desired","type":"uint256","internalType":"uint256"},{"name":"amount0Min","type":"uint256","internalType":"uint256"},{"name":"amount1Min","type":"uint256","internalType":"uint256"},{"name":"deadline","type":"uint256","internalType":"uint256"},{"name":"recipient","type":"address","internalType":"address"}]}],"outputs":[{"name":"shares","type":"uint256","internalType":"uint256"},{"name":"addedLiquidity","type":"uint128","internalType":"uint128"},{"name":"amount0","type":"uint256","internalType":"uint256"},{"name":"amount1","type":"uint256","internalType":"uint256"}],"stateMutability":"payable"},{"type":"function","name":"factory","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IUniswapV3Factory"}],"stateMutability":"view"},{"type":"function","name":"getBunniToken","inputs":[{"name":"key","type":"tuple","internalType":"struct BunniKey","components":[{"name":"pool","type":"address","internalType":"contract IUniswapV3Pool"},{"name":"tickLower","type":"int24","internalType":"int24"},{"name":"tickUpper","type":"int24","internalType":"int24"}]}],"outputs":[{"name":"token","type":"address","internalType":"contract IBunniToken"}],"stateMutability":"view"},{"type":"function","name":"multicall","inputs":[{"name":"data","type":"bytes[]","internalType":"bytes[]"}],"outputs":[{"name":"results","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"payable"},{"type":"function","name":"protocolFee","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"selfPermit","inputs":[{"name":"token","type":"address","internalType":"address"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"deadline","type":"uint256","internalType":"uint256"},{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"selfPermitAllowed","inputs":[{"name":"token","type":"address","internalType":"address"},{"name":"nonce","type":"uint256","internalType":"uint256"},{"name":"expiry","type":"uint256","internalType":"uint256"},{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"selfPermitAllowedIfNecessary","inputs":[{"name":"token","type":"address","internalType":"address"},{"name":"nonce","type":"uint256","internalType":"uint256"},{"name":"expiry","type":"uint256","internalType":"uint256"},{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"selfPermitIfNecessary","inputs":[{"name":"token","type":"address","internalType":"address"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"deadline","type":"uint256","internalType":"uint256"},{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"setProtocolFee","inputs":[{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"sweepTokens","inputs":[{"name":"tokenList","type":"address[]","internalType":"contract ERC20[]"},{"name":"recipient","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"uniswapV3MintCallback","inputs":[{"name":"amount0Owed","type":"uint256","internalType":"uint256"},{"name":"amount1Owed","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"updateSwapFees","inputs":[{"name":"key","type":"tuple","internalType":"struct BunniKey","components":[{"name":"pool","type":"address","internalType":"contract IUniswapV3Pool"},{"name":"tickLower","type":"int24","internalType":"int24"},{"name":"tickUpper","type":"int24","internalType":"int24"}]}],"outputs":[{"name":"swapFee0","type":"uint256","internalType":"uint256"},{"name":"swapFee1","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"withdraw","inputs":[{"name":"params","type":"tuple","internalType":"struct IBunniHub.WithdrawParams","components":[{"name":"key","type":"tuple","internalType":"struct BunniKey","components":[{"name":"pool","type":"address","internalType":"contract IUniswapV3Pool"},{"name":"tickLower","type":"int24","internalType":"int24"},{"name":"tickUpper","type":"int24","internalType":"int24"}]},{"name":"recipient","type":"address","internalType":"address"},{"name":"shares","type":"uint256","internalType":"uint256"},{"name":"amount0Min","type":"uint256","internalType":"uint256"},{"name":"amount1Min","type":"uint256","internalType":"uint256"},{"name":"deadline","type":"uint256","internalType":"uint256"}]}],"outputs":[{"name":"removedLiquidity","type":"uint128","internalType":"uint128"},{"name":"amount0","type":"uint256","internalType":"uint256"},{"name":"amount1","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"event","name":"Compound","inputs":[{"name":"sender","type":"address","indexed":true,"internalType":"address"},{"name":"bunniKeyHash","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"liquidity","type":"uint128","indexed":false,"internalType":"uint128"},{"name":"amount0","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"amount1","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"Deposit","inputs":[{"name":"sender","type":"address","indexed":true,"internalType":"address"},{"name":"recipient","type":"address","indexed":true,"internalType":"address"},{"name":"bunniKeyHash","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"liquidity","type":"uint128","indexed":false,"internalType":"uint128"},{"name":"amount0","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"amount1","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"shares","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"NewBunni","inputs":[{"name":"token","type":"address","indexed":true,"internalType":"contract IBunniToken"},{"name":"bunniKeyHash","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"pool","type":"address","indexed":true,"internalType":"contract IUniswapV3Pool"},{"name":"tickLower","type":"int24","indexed":false,"internalType":"int24"},{"name":"tickUpper","type":"int24","indexed":false,"internalType":"int24"}],"anonymous":false},{"type":"event","name":"PayProtocolFee","inputs":[{"name":"amount0","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"amount1","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"SetProtocolFee","inputs":[{"name":"newProtocolFee","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"Withdraw","inputs":[{"name":"sender","type":"address","indexed":true,"internalType":"address"},{"name":"recipient","type":"address","indexed":true,"internalType":"address"},{"name":"bunniKeyHash","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"liquidity","type":"uint128","indexed":false,"internalType":"uint128"},{"name":"amount0","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"amount1","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"shares","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"compound((address,int24,int24))":"227efac3","deployBunniToken((address,int24,int24))":"0b2b685e","deposit(((address,int24,int24),uint256,uint256,uint256,uint256,uint256,address))":"b3165aaf","factory()":"c45a0155","getBunniToken((address,int24,int24))":"056f6b2b","multicall(bytes[])":"ac9650d8","protocolFee()":"b0e21e8a","selfPermit(address,uint256,uint256,uint8,bytes32,bytes32)":"f3995c67","selfPermitAllowed(address,uint256,uint256,uint8,bytes32,bytes32)":"4659a494","selfPermitAllowedIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)":"a4a78f0c","selfPermitIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)":"c2e3140a","setProtocolFee(uint256)":"787dce3d","sweepTokens(address[],address)":"7071f0c4","uniswapV3MintCallback(uint256,uint256,bytes)":"d3487997","updateSwapFees((address,int24,int24))":"5706c20a","withdraw(((address,int24,int24),address,uint256,uint256,uint256,uint256))":"d59bd263"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"bunniKeyHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Compound\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"bunniKeyHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IBunniToken\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"bunniKeyHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"contract IUniswapV3Pool\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"NewBunni\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"PayProtocolFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newProtocolFee\",\"type\":\"uint256\"}],\"name\":\"SetProtocolFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"bunniKeyHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IUniswapV3Pool\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"internalType\":\"struct BunniKey\",\"name\":\"key\",\"type\":\"tuple\"}],\"name\":\"compound\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"addedLiquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IUniswapV3Pool\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"internalType\":\"struct BunniKey\",\"name\":\"key\",\"type\":\"tuple\"}],\"name\":\"deployBunniToken\",\"outputs\":[{\"internalType\":\"contract IBunniToken\",\"name\":\"token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"contract IUniswapV3Pool\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"internalType\":\"struct BunniKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"amount0Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount0Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct IBunniHub.DepositParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"addedLiquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"contract IUniswapV3Factory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IUniswapV3Pool\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"internalType\":\"struct BunniKey\",\"name\":\"key\",\"type\":\"tuple\"}],\"name\":\"getBunniToken\",\"outputs\":[{\"internalType\":\"contract IBunniToken\",\"name\":\"token\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"selfPermit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"selfPermitAllowed\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"selfPermitAllowedIfNecessary\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"selfPermitIfNecessary\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"setProtocolFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20[]\",\"name\":\"tokenList\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"sweepTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Owed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Owed\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3MintCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IUniswapV3Pool\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"internalType\":\"struct BunniKey\",\"name\":\"key\",\"type\":\"tuple\"}],\"name\":\"updateSwapFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"swapFee0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"swapFee1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"contract IUniswapV3Pool\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"internalType\":\"struct BunniKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount0Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct IBunniHub.WithdrawParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"removedLiquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"zefram.eth\",\"details\":\"Imported at commit: https://github.com/ZeframLou/bunni/tree/fd65011c4e24660d0a63295cb3812c1821529842The following changes were made from the original source code:- Use solmate ERC20 and SafeTransferLib instead of the local IERC20 and SafeTransferLib- updateSwapFees() function added\",\"events\":{\"Compound(address,bytes32,uint128,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 added to the liquidity position\",\"amount1\":\"The amount of token1 added to the liquidity position\",\"bunniKeyHash\":\"The hash of the Bunni position's key\",\"liquidity\":\"The amount by which liquidity was increased\",\"sender\":\"The msg.sender address\"}},\"Deposit(address,address,bytes32,uint128,uint256,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was paid for the increase in liquidity\",\"amount1\":\"The amount of token1 that was paid for the increase in liquidity\",\"bunniKeyHash\":\"The hash of the Bunni position's key\",\"liquidity\":\"The amount by which liquidity was increased\",\"recipient\":\"The address of the account that received the share tokens\",\"sender\":\"The msg.sender address\",\"shares\":\"The amount of share tokens minted to the recipient\"}},\"NewBunni(address,bytes32,address,int24,int24)\":{\"params\":{\"bunniKeyHash\":\"The hash of the Bunni position's key\",\"pool\":\"The Uniswap V3 pool\",\"tickLower\":\"The lower tick of the Bunni's UniV3 LP position\",\"tickUpper\":\"The upper tick of the Bunni's UniV3 LP position\"}},\"PayProtocolFee(uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 protocol fees that is withdrawn\",\"amount1\":\"The amount of token1 protocol fees that is withdrawn\"}},\"SetProtocolFee(uint256)\":{\"params\":{\"newProtocolFee\":\"The new protocol fee\"}},\"Withdraw(address,address,bytes32,uint128,uint256,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was accounted for the decrease in liquidity\",\"amount1\":\"The amount of token1 that was accounted for the decrease in liquidity\",\"bunniKeyHash\":\"The hash of the Bunni position's key\",\"liquidity\":\"The amount by which liquidity was decreased\",\"recipient\":\"The address of the account that received the collected tokens\",\"sender\":\"The msg.sender address\",\"shares\":\"The amount of share tokens burnt from the sender\"}}},\"kind\":\"dev\",\"methods\":{\"compound((address,int24,int24))\":{\"details\":\"Must be called after the corresponding BunniToken has been deployed via deployBunniToken()\",\"params\":{\"key\":\"The Bunni position's key\"},\"returns\":{\"addedLiquidity\":\"The new liquidity amount as a result of the increase\",\"amount0\":\"The amount of token0 added to the liquidity position\",\"amount1\":\"The amount of token1 added to the liquidity position\"}},\"deployBunniToken((address,int24,int24))\":{\"params\":{\"key\":\"The Bunni position's key\"},\"returns\":{\"token\":\"The deployed BunniToken\"}},\"deposit(((address,int24,int24),uint256,uint256,uint256,uint256,uint256,address))\":{\"details\":\"Must be called after the corresponding BunniToken has been deployed via deployBunniToken()\",\"params\":{\"params\":\"The input parameters key The Bunni position's key amount0Desired The desired amount of token0 to be spent, amount1Desired The desired amount of token1 to be spent, amount0Min The minimum amount of token0 to spend, which serves as a slippage check, amount1Min The minimum amount of token1 to spend, which serves as a slippage check, deadline The time by which the transaction must be included to effect the change\"},\"returns\":{\"addedLiquidity\":\"The new liquidity amount as a result of the increase\",\"amount0\":\"The amount of token0 to acheive resulting liquidity\",\"amount1\":\"The amount of token1 to acheive resulting liquidity\",\"shares\":\"The new share tokens minted to the sender\"}},\"getBunniToken((address,int24,int24))\":{\"params\":{\"key\":\"The Bunni position's key\"},\"returns\":{\"token\":\"The BunniToken contract\"}},\"multicall(bytes[])\":{\"details\":\"The `msg.value` should not be trusted for any method callable from multicall.\",\"params\":{\"data\":\"The encoded function data for each of the calls to make to this contract\"},\"returns\":{\"results\":\"The results from each of the calls passed in via data\"}},\"selfPermit(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"The `owner` is always msg.sender and the `spender` is always address(this).\",\"params\":{\"deadline\":\"A timestamp, the current blocktime must be less than or equal to this timestamp\",\"r\":\"Must produce valid secp256k1 signature from the holder along with `v` and `s`\",\"s\":\"Must produce valid secp256k1 signature from the holder along with `r` and `v`\",\"token\":\"The address of the token spent\",\"v\":\"Must produce valid secp256k1 signature from the holder along with `r` and `s`\",\"value\":\"The amount that can be spent of token\"}},\"selfPermitAllowed(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"The `owner` is always msg.sender and the `spender` is always address(this)\",\"params\":{\"expiry\":\"The timestamp at which the permit is no longer valid\",\"nonce\":\"The current nonce of the owner\",\"r\":\"Must produce valid secp256k1 signature from the holder along with `v` and `s`\",\"s\":\"Must produce valid secp256k1 signature from the holder along with `r` and `v`\",\"token\":\"The address of the token spent\",\"v\":\"Must produce valid secp256k1 signature from the holder along with `r` and `s`\"}},\"selfPermitAllowedIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"The `owner` is always msg.sender and the `spender` is always address(this) Can be used instead of #selfPermitAllowed to prevent calls from failing due to a frontrun of a call to #selfPermitAllowed.\",\"params\":{\"expiry\":\"The timestamp at which the permit is no longer valid\",\"nonce\":\"The current nonce of the owner\",\"r\":\"Must produce valid secp256k1 signature from the holder along with `v` and `s`\",\"s\":\"Must produce valid secp256k1 signature from the holder along with `r` and `v`\",\"token\":\"The address of the token spent\",\"v\":\"Must produce valid secp256k1 signature from the holder along with `r` and `s`\"}},\"selfPermitIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"The `owner` is always msg.sender and the `spender` is always address(this). Can be used instead of #selfPermit to prevent calls from failing due to a frontrun of a call to #selfPermit\",\"params\":{\"deadline\":\"A timestamp, the current blocktime must be less than or equal to this timestamp\",\"r\":\"Must produce valid secp256k1 signature from the holder along with `v` and `s`\",\"s\":\"Must produce valid secp256k1 signature from the holder along with `r` and `v`\",\"token\":\"The address of the token spent\",\"v\":\"Must produce valid secp256k1 signature from the holder along with `r` and `s`\",\"value\":\"The amount that can be spent of token\"}},\"setProtocolFee(uint256)\":{\"params\":{\"value\":\"The new protocol fee value\"}},\"sweepTokens(address[],address)\":{\"params\":{\"recipient\":\"The token recipient address\",\"tokenList\":\"The list of ERC20 tokens to sweep\"}},\"uniswapV3MintCallback(uint256,uint256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the minted liquidity. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\",\"params\":{\"amount0Owed\":\"The amount of token0 due to the pool for the minted liquidity\",\"amount1Owed\":\"The amount of token1 due to the pool for the minted liquidity\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#mint call\"}},\"updateSwapFees((address,int24,int24))\":{\"details\":\"Must be called after the corresponding BunniToken has been deployed via deployBunniToken()                     This function is not part of the original BunniHub codebase, and was added by the Olympus team.                     The function enables the BunniManager policy to update the fees, since                     IUniswapV3Pool.burn() will update the fees for the caller only.\",\"params\":{\"key\":\"The Bunni position's key\"},\"returns\":{\"swapFee0\":\"   The new swap fee for token0\",\"swapFee1\":\"   The new swap fee for token1\"}},\"withdraw(((address,int24,int24),address,uint256,uint256,uint256,uint256))\":{\"details\":\"Must be called after the corresponding BunniToken has been deployed via deployBunniToken()\",\"params\":{\"params\":\"The input parameters key The Bunni position's key recipient The user if not withdrawing ETH, address(0) if withdrawing ETH shares The amount of share tokens to burn, amount0Min The minimum amount of token0 that should be accounted for the burned liquidity, amount1Min The minimum amount of token1 that should be accounted for the burned liquidity, deadline The time by which the transaction must be included to effect the change\"},\"returns\":{\"amount0\":\"The amount of token0 withdrawn to the recipient\",\"amount1\":\"The amount of token1 withdrawn to the recipient\",\"removedLiquidity\":\"The amount of liquidity decrease\"}}},\"title\":\"BunniHub\",\"version\":1},\"userdoc\":{\"events\":{\"Compound(address,bytes32,uint128,uint256,uint256)\":{\"notice\":\"Emitted when fees are compounded back into liquidity\"},\"Deposit(address,address,bytes32,uint128,uint256,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is increased via deposit\"},\"NewBunni(address,bytes32,address,int24,int24)\":{\"notice\":\"Emitted when a new IBunniToken is created\"},\"PayProtocolFee(uint256,uint256)\":{\"notice\":\"Emitted when protocol fees are paid to the factory\"},\"SetProtocolFee(uint256)\":{\"notice\":\"Emitted when the protocol fee has been updated\"},\"Withdraw(address,address,bytes32,uint128,uint256,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is decreased via withdrawal\"}},\"kind\":\"user\",\"methods\":{\"compound((address,int24,int24))\":{\"notice\":\"Claims the trading fees earned and uses it to add liquidity.\"},\"deployBunniToken((address,int24,int24))\":{\"notice\":\"Deploys the BunniToken contract for a Bunni position. This token represents a user's share in the Uniswap V3 LP position.\"},\"deposit(((address,int24,int24),uint256,uint256,uint256,uint256,uint256,address))\":{\"notice\":\"Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`\"},\"getBunniToken((address,int24,int24))\":{\"notice\":\"Returns the BunniToken contract for a Bunni position. This token represents a user's share in the Uniswap V3 LP position. If the contract hasn't been created yet, returns 0.\"},\"multicall(bytes[])\":{\"notice\":\"Call multiple functions in the current contract and return the data from all of them if they all succeed\"},\"protocolFee()\":{\"notice\":\"Returns the protocol fee value. Decimal value <1, scaled by 1e18.\"},\"selfPermit(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Permits this contract to spend a given token from `msg.sender`\"},\"selfPermitAllowed(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Permits this contract to spend the sender's tokens for permit signatures that have the `allowed` parameter\"},\"selfPermitAllowedIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Permits this contract to spend the sender's tokens for permit signatures that have the `allowed` parameter\"},\"selfPermitIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Permits this contract to spend a given token from `msg.sender`\"},\"setProtocolFee(uint256)\":{\"notice\":\"Updates the protocol fee value. Scaled by 1e18. Only callable by the owner.\"},\"sweepTokens(address[],address)\":{\"notice\":\"Sweeps ERC20 token balances to a recipient. Mainly used for extracting protocol fees. Only callable by the owner.\"},\"uniswapV3MintCallback(uint256,uint256,bytes)\":{\"notice\":\"Called to `msg.sender` after minting liquidity to a position from IUniswapV3Pool#mint.\"},\"updateSwapFees((address,int24,int24))\":{\"notice\":\"Updates the swap fees for the given Uniswap V3 pool\"},\"withdraw(((address,int24,int24),address,uint256,uint256,uint256,uint256))\":{\"notice\":\"Decreases the amount of liquidity in the position and sends the tokens to the sender. If withdrawing ETH, need to follow up with unwrapWETH9() and sweepToken()\"}},\"notice\":\"The main contract LPs interact with. Each BunniKey corresponds to a BunniToken, which is the ERC20 LP token for the Uniswap V3 position specified by the BunniKey. Use deposit()/withdraw() to mint/burn LP tokens, and use compound() to compound the swap fees back into the LP position.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IBunniHub.sol\":\"IBunniHub\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@uniswap/=lib/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":solmate/=lib/solmate/src/\",\":v3-core/=lib/v3-core/\",\":v3-periphery/=lib/v3-periphery/\"]},\"sources\":{\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35\",\"dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97\"]},\"lib/v3-core/contracts/interfaces/IUniswapV3Factory.sol\":{\"keccak256\":\"0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b9379ad954680c44a0bc523b314ae4c4da735f9fe1d02aa56ea5bdba6f1136f2\",\"dweb:/ipfs/QmZXdgQNXKAckrXWz9R3mc47F1fvDvr28a2ewJrwNAw71B\"]},\"lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0x4e64844c56061cd90e0a80de73534a9166704c43eed579eb83f90bc2780ce968\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://cba4fab5cebdddf644b901994a7f0f52b98885d4c56012f4dc51d52c2bf9de0e\",\"dweb:/ipfs/QmVyyrRmqXrAiapewWunRVgiPVFJHpH2hKiE1py1svMSNV\"]},\"lib/v3-core/contracts/interfaces/callback/IUniswapV3MintCallback.sol\":{\"keccak256\":\"0x27a9725b8f831a92d16380860c3d348a0b926a7f01b34a54ea6eea78cbdbcd6a\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7c37ca742c643ca4ba6baadff72b8450c6e340a30f7fea0863dba74030a9bbc7\",\"dweb:/ipfs/QmeKBR6a7tQSX85Q7Lb2wrAWSEFqhC4tTmLo4SzcN3kFmp\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolErrors.sol\":{\"keccak256\":\"0xf80abf13fb1fafc127ba4e792f240dd8ea7c8c893978cdfd8439c27fae9a037b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b04fc72a656bbf3631e9c2e67b9870a2d9d235185e833fe050e9606e6816a9aa\",\"dweb:/ipfs/QmUcz4bkEkJ9pwzFu1C3n97hBQ3st9U6qTAqCdyFwddKco\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x44fa2ce1182f6c2f6bead3d1737804bf7e112252ae86e0f2e92f9b8249603f43\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://54154e8665b98d65f5dc91b256551852cb47882180b501b260657122d207c0ea\",\"dweb:/ipfs/QmcfemK1A2PXYrWB5SBFGERpMCderbFRb8BtTzQDj1sUBp\"]},\"lib/v3-periphery/contracts/interfaces/IMulticall.sol\":{\"keccak256\":\"0xa8f9d0061ee730a522dc4bae6bd5cabb3e997e2c5983da183e912bdca93dfa7b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://496b68d4f72d58cc83cf51bd9cc9c99aaa46dc3c3df7c951a9e50ba29ee33016\",\"dweb:/ipfs/Qmc3bkXwuRP8mDpcKgvLgbCKn8tD8PGCaBjnLHSPMJCRGD\"]},\"lib/v3-periphery/contracts/interfaces/ISelfPermit.sol\":{\"keccak256\":\"0xe1a1c072855e687c90317c15b9b6ce81cc683723f73d70e47b40f2f9bad0c2be\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://53b0881a1c55254d157054bd3d1c86982c0f5429bd2a9986c15479f6b71ef678\",\"dweb:/ipfs/Qmc9WZqXzQmqsA3xYxojbx9nXcG3FGuwAjM3opEmRGSnBb\"]},\"src/interfaces/IBunniHub.sol\":{\"keccak256\":\"0xfdadaec2385b1eb305a580112b6b5c2455a90c16231d7cfbb64e482544e173c9\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://9773705574fc9e14d30424d5a844cddd7f3ae2e12005b4aeb6df5d9f7d264fc8\",\"dweb:/ipfs/QmbAoqRpv4A4FX4oGcRaRCcb3iXU4RvdwxpPUj51mAduU3\"]},\"src/interfaces/IBunniToken.sol\":{\"keccak256\":\"0xb7aab6d89d4aaf545658b03f8cd0bb9cdabcf854818833a29531aa2d86dc6b9e\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://5dab8dd7499a6c33522fffea06e44e2848ebc7ee1d7e3053f3c35d257f652b40\",\"dweb:/ipfs/Qme6ALCnq2QbuQ61pMcraXccbMHXJ9RxuDcZFrARYswi33\"]},\"src/interfaces/IERC20.sol\":{\"keccak256\":\"0x32ee345f3bb39351344db0f378633c94ba8a52cc6d4a5b051cbb4ed77d5b0427\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://10aa0dbd5967aeef1f5b266de28b30728163e61fc88d29d6d890e3d7934bd7ba\",\"dweb:/ipfs/QmT7d3fyE8AcbreoGC4Wqao56zRvpy9johNMTmQhbG6Bmj\"]},\"src/interfaces/ILiquidityManagement.sol\":{\"keccak256\":\"0x41972a1b07e8b1d737a74f45f2116aeba76d69d5813f37ac5dcc6d1440611259\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a762a2a66f64a91617610118b7c1a4bddc67a1f728240ecdeeff99232e98dead\",\"dweb:/ipfs/QmNTh7TxGc4oMMWDZay4orqYkXWcGP1cLZECExSQuBCTiG\"]},\"src/interfaces/Structs.sol\":{\"keccak256\":\"0xfd794ff3c46b9715e4f922f54477e4fa8dd3a0d8c7da50688e7b32be8a444b78\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://9af9e34d90af3a66bd4368bd4ba0e43c85d72d59edbb36004711b5c7822090f5\",\"dweb:/ipfs/QmWY5g6C32AxBRdL4YNDydSaUky4BrV7W4ynbJPoWdSMte\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.15+commit.e14f2714"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address","indexed":true},{"internalType":"bytes32","name":"bunniKeyHash","type":"bytes32","indexed":true},{"internalType":"uint128","name":"liquidity","type":"uint128","indexed":false},{"internalType":"uint256","name":"amount0","type":"uint256","indexed":false},{"internalType":"uint256","name":"amount1","type":"uint256","indexed":false}],"type":"event","name":"Compound","anonymous":false},{"inputs":[{"internalType":"address","name":"sender","type":"address","indexed":true},{"internalType":"address","name":"recipient","type":"address","indexed":true},{"internalType":"bytes32","name":"bunniKeyHash","type":"bytes32","indexed":true},{"internalType":"uint128","name":"liquidity","type":"uint128","indexed":false},{"internalType":"uint256","name":"amount0","type":"uint256","indexed":false},{"internalType":"uint256","name":"amount1","type":"uint256","indexed":false},{"internalType":"uint256","name":"shares","type":"uint256","indexed":false}],"type":"event","name":"Deposit","anonymous":false},{"inputs":[{"internalType":"contract IBunniToken","name":"token","type":"address","indexed":true},{"internalType":"bytes32","name":"bunniKeyHash","type":"bytes32","indexed":true},{"internalType":"contract IUniswapV3Pool","name":"pool","type":"address","indexed":true},{"internalType":"int24","name":"tickLower","type":"int24","indexed":false},{"internalType":"int24","name":"tickUpper","type":"int24","indexed":false}],"type":"event","name":"NewBunni","anonymous":false},{"inputs":[{"internalType":"uint256","name":"amount0","type":"uint256","indexed":false},{"internalType":"uint256","name":"amount1","type":"uint256","indexed":false}],"type":"event","name":"PayProtocolFee","anonymous":false},{"inputs":[{"internalType":"uint256","name":"newProtocolFee","type":"uint256","indexed":false}],"type":"event","name":"SetProtocolFee","anonymous":false},{"inputs":[{"internalType":"address","name":"sender","type":"address","indexed":true},{"internalType":"address","name":"recipient","type":"address","indexed":true},{"internalType":"bytes32","name":"bunniKeyHash","type":"bytes32","indexed":true},{"internalType":"uint128","name":"liquidity","type":"uint128","indexed":false},{"internalType":"uint256","name":"amount0","type":"uint256","indexed":false},{"internalType":"uint256","name":"amount1","type":"uint256","indexed":false},{"internalType":"uint256","name":"shares","type":"uint256","indexed":false}],"type":"event","name":"Withdraw","anonymous":false},{"inputs":[{"internalType":"struct BunniKey","name":"key","type":"tuple","components":[{"internalType":"contract IUniswapV3Pool","name":"pool","type":"address"},{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"}]}],"stateMutability":"nonpayable","type":"function","name":"compound","outputs":[{"internalType":"uint128","name":"addedLiquidity","type":"uint128"},{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"}]},{"inputs":[{"internalType":"struct BunniKey","name":"key","type":"tuple","components":[{"internalType":"contract IUniswapV3Pool","name":"pool","type":"address"},{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"}]}],"stateMutability":"nonpayable","type":"function","name":"deployBunniToken","outputs":[{"internalType":"contract IBunniToken","name":"token","type":"address"}]},{"inputs":[{"internalType":"struct IBunniHub.DepositParams","name":"params","type":"tuple","components":[{"internalType":"struct BunniKey","name":"key","type":"tuple","components":[{"internalType":"contract IUniswapV3Pool","name":"pool","type":"address"},{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"}]},{"internalType":"uint256","name":"amount0Desired","type":"uint256"},{"internalType":"uint256","name":"amount1Desired","type":"uint256"},{"internalType":"uint256","name":"amount0Min","type":"uint256"},{"internalType":"uint256","name":"amount1Min","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"address","name":"recipient","type":"address"}]}],"stateMutability":"payable","type":"function","name":"deposit","outputs":[{"internalType":"uint256","name":"shares","type":"uint256"},{"internalType":"uint128","name":"addedLiquidity","type":"uint128"},{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"factory","outputs":[{"internalType":"contract IUniswapV3Factory","name":"","type":"address"}]},{"inputs":[{"internalType":"struct BunniKey","name":"key","type":"tuple","components":[{"internalType":"contract IUniswapV3Pool","name":"pool","type":"address"},{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"}]}],"stateMutability":"view","type":"function","name":"getBunniToken","outputs":[{"internalType":"contract IBunniToken","name":"token","type":"address"}]},{"inputs":[{"internalType":"bytes[]","name":"data","type":"bytes[]"}],"stateMutability":"payable","type":"function","name":"multicall","outputs":[{"internalType":"bytes[]","name":"results","type":"bytes[]"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"protocolFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"stateMutability":"payable","type":"function","name":"selfPermit"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"stateMutability":"payable","type":"function","name":"selfPermitAllowed"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"stateMutability":"payable","type":"function","name":"selfPermitAllowedIfNecessary"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"stateMutability":"payable","type":"function","name":"selfPermitIfNecessary"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"setProtocolFee"},{"inputs":[{"internalType":"contract ERC20[]","name":"tokenList","type":"address[]"},{"internalType":"address","name":"recipient","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"sweepTokens"},{"inputs":[{"internalType":"uint256","name":"amount0Owed","type":"uint256"},{"internalType":"uint256","name":"amount1Owed","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"uniswapV3MintCallback"},{"inputs":[{"internalType":"struct BunniKey","name":"key","type":"tuple","components":[{"internalType":"contract IUniswapV3Pool","name":"pool","type":"address"},{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"}]}],"stateMutability":"nonpayable","type":"function","name":"updateSwapFees","outputs":[{"internalType":"uint256","name":"swapFee0","type":"uint256"},{"internalType":"uint256","name":"swapFee1","type":"uint256"}]},{"inputs":[{"internalType":"struct IBunniHub.WithdrawParams","name":"params","type":"tuple","components":[{"internalType":"struct BunniKey","name":"key","type":"tuple","components":[{"internalType":"contract IUniswapV3Pool","name":"pool","type":"address"},{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"}]},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"shares","type":"uint256"},{"internalType":"uint256","name":"amount0Min","type":"uint256"},{"internalType":"uint256","name":"amount1Min","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"}]}],"stateMutability":"nonpayable","type":"function","name":"withdraw","outputs":[{"internalType":"uint128","name":"removedLiquidity","type":"uint128"},{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"}]}],"devdoc":{"kind":"dev","methods":{"compound((address,int24,int24))":{"details":"Must be called after the corresponding BunniToken has been deployed via deployBunniToken()","params":{"key":"The Bunni position's key"},"returns":{"addedLiquidity":"The new liquidity amount as a result of the increase","amount0":"The amount of token0 added to the liquidity position","amount1":"The amount of token1 added to the liquidity position"}},"deployBunniToken((address,int24,int24))":{"params":{"key":"The Bunni position's key"},"returns":{"token":"The deployed BunniToken"}},"deposit(((address,int24,int24),uint256,uint256,uint256,uint256,uint256,address))":{"details":"Must be called after the corresponding BunniToken has been deployed via deployBunniToken()","params":{"params":"The input parameters key The Bunni position's key amount0Desired The desired amount of token0 to be spent, amount1Desired The desired amount of token1 to be spent, amount0Min The minimum amount of token0 to spend, which serves as a slippage check, amount1Min The minimum amount of token1 to spend, which serves as a slippage check, deadline The time by which the transaction must be included to effect the change"},"returns":{"addedLiquidity":"The new liquidity amount as a result of the increase","amount0":"The amount of token0 to acheive resulting liquidity","amount1":"The amount of token1 to acheive resulting liquidity","shares":"The new share tokens minted to the sender"}},"getBunniToken((address,int24,int24))":{"params":{"key":"The Bunni position's key"},"returns":{"token":"The BunniToken contract"}},"multicall(bytes[])":{"details":"The `msg.value` should not be trusted for any method callable from multicall.","params":{"data":"The encoded function data for each of the calls to make to this contract"},"returns":{"results":"The results from each of the calls passed in via data"}},"selfPermit(address,uint256,uint256,uint8,bytes32,bytes32)":{"details":"The `owner` is always msg.sender and the `spender` is always address(this).","params":{"deadline":"A timestamp, the current blocktime must be less than or equal to this timestamp","r":"Must produce valid secp256k1 signature from the holder along with `v` and `s`","s":"Must produce valid secp256k1 signature from the holder along with `r` and `v`","token":"The address of the token spent","v":"Must produce valid secp256k1 signature from the holder along with `r` and `s`","value":"The amount that can be spent of token"}},"selfPermitAllowed(address,uint256,uint256,uint8,bytes32,bytes32)":{"details":"The `owner` is always msg.sender and the `spender` is always address(this)","params":{"expiry":"The timestamp at which the permit is no longer valid","nonce":"The current nonce of the owner","r":"Must produce valid secp256k1 signature from the holder along with `v` and `s`","s":"Must produce valid secp256k1 signature from the holder along with `r` and `v`","token":"The address of the token spent","v":"Must produce valid secp256k1 signature from the holder along with `r` and `s`"}},"selfPermitAllowedIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)":{"details":"The `owner` is always msg.sender and the `spender` is always address(this) Can be used instead of #selfPermitAllowed to prevent calls from failing due to a frontrun of a call to #selfPermitAllowed.","params":{"expiry":"The timestamp at which the permit is no longer valid","nonce":"The current nonce of the owner","r":"Must produce valid secp256k1 signature from the holder along with `v` and `s`","s":"Must produce valid secp256k1 signature from the holder along with `r` and `v`","token":"The address of the token spent","v":"Must produce valid secp256k1 signature from the holder along with `r` and `s`"}},"selfPermitIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)":{"details":"The `owner` is always msg.sender and the `spender` is always address(this). Can be used instead of #selfPermit to prevent calls from failing due to a frontrun of a call to #selfPermit","params":{"deadline":"A timestamp, the current blocktime must be less than or equal to this timestamp","r":"Must produce valid secp256k1 signature from the holder along with `v` and `s`","s":"Must produce valid secp256k1 signature from the holder along with `r` and `v`","token":"The address of the token spent","v":"Must produce valid secp256k1 signature from the holder along with `r` and `s`","value":"The amount that can be spent of token"}},"setProtocolFee(uint256)":{"params":{"value":"The new protocol fee value"}},"sweepTokens(address[],address)":{"params":{"recipient":"The token recipient address","tokenList":"The list of ERC20 tokens to sweep"}},"uniswapV3MintCallback(uint256,uint256,bytes)":{"details":"In the implementation you must pay the pool tokens owed for the minted liquidity. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.","params":{"amount0Owed":"The amount of token0 due to the pool for the minted liquidity","amount1Owed":"The amount of token1 due to the pool for the minted liquidity","data":"Any data passed through by the caller via the IUniswapV3PoolActions#mint call"}},"updateSwapFees((address,int24,int24))":{"details":"Must be called after the corresponding BunniToken has been deployed via deployBunniToken()                     This function is not part of the original BunniHub codebase, and was added by the Olympus team.                     The function enables the BunniManager policy to update the fees, since                     IUniswapV3Pool.burn() will update the fees for the caller only.","params":{"key":"The Bunni position's key"},"returns":{"swapFee0":"   The new swap fee for token0","swapFee1":"   The new swap fee for token1"}},"withdraw(((address,int24,int24),address,uint256,uint256,uint256,uint256))":{"details":"Must be called after the corresponding BunniToken has been deployed via deployBunniToken()","params":{"params":"The input parameters key The Bunni position's key recipient The user if not withdrawing ETH, address(0) if withdrawing ETH shares The amount of share tokens to burn, amount0Min The minimum amount of token0 that should be accounted for the burned liquidity, amount1Min The minimum amount of token1 that should be accounted for the burned liquidity, deadline The time by which the transaction must be included to effect the change"},"returns":{"amount0":"The amount of token0 withdrawn to the recipient","amount1":"The amount of token1 withdrawn to the recipient","removedLiquidity":"The amount of liquidity decrease"}}},"version":1},"userdoc":{"kind":"user","methods":{"compound((address,int24,int24))":{"notice":"Claims the trading fees earned and uses it to add liquidity."},"deployBunniToken((address,int24,int24))":{"notice":"Deploys the BunniToken contract for a Bunni position. This token represents a user's share in the Uniswap V3 LP position."},"deposit(((address,int24,int24),uint256,uint256,uint256,uint256,uint256,address))":{"notice":"Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`"},"getBunniToken((address,int24,int24))":{"notice":"Returns the BunniToken contract for a Bunni position. This token represents a user's share in the Uniswap V3 LP position. If the contract hasn't been created yet, returns 0."},"multicall(bytes[])":{"notice":"Call multiple functions in the current contract and return the data from all of them if they all succeed"},"protocolFee()":{"notice":"Returns the protocol fee value. Decimal value <1, scaled by 1e18."},"selfPermit(address,uint256,uint256,uint8,bytes32,bytes32)":{"notice":"Permits this contract to spend a given token from `msg.sender`"},"selfPermitAllowed(address,uint256,uint256,uint8,bytes32,bytes32)":{"notice":"Permits this contract to spend the sender's tokens for permit signatures that have the `allowed` parameter"},"selfPermitAllowedIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)":{"notice":"Permits this contract to spend the sender's tokens for permit signatures that have the `allowed` parameter"},"selfPermitIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)":{"notice":"Permits this contract to spend a given token from `msg.sender`"},"setProtocolFee(uint256)":{"notice":"Updates the protocol fee value. Scaled by 1e18. Only callable by the owner."},"sweepTokens(address[],address)":{"notice":"Sweeps ERC20 token balances to a recipient. Mainly used for extracting protocol fees. Only callable by the owner."},"uniswapV3MintCallback(uint256,uint256,bytes)":{"notice":"Called to `msg.sender` after minting liquidity to a position from IUniswapV3Pool#mint."},"updateSwapFees((address,int24,int24))":{"notice":"Updates the swap fees for the given Uniswap V3 pool"},"withdraw(((address,int24,int24),address,uint256,uint256,uint256,uint256))":{"notice":"Decreases the amount of liquidity in the position and sends the tokens to the sender. If withdrawing ETH, need to follow up with unwrapWETH9() and sweepToken()"}},"version":1}},"settings":{"remappings":["@uniswap/=lib/","ds-test/=lib/forge-std/lib/ds-test/src/","forge-std/=lib/forge-std/src/","solmate/=lib/solmate/src/","v3-core/=lib/v3-core/","v3-periphery/=lib/v3-periphery/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/interfaces/IBunniHub.sol":"IBunniHub"},"libraries":{}},"sources":{"lib/solmate/src/tokens/ERC20.sol":{"keccak256":"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10","urls":["bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35","dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97"],"license":"AGPL-3.0-only"},"lib/v3-core/contracts/interfaces/IUniswapV3Factory.sol":{"keccak256":"0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489","urls":["bzz-raw://b9379ad954680c44a0bc523b314ae4c4da735f9fe1d02aa56ea5bdba6f1136f2","dweb:/ipfs/QmZXdgQNXKAckrXWz9R3mc47F1fvDvr28a2ewJrwNAw71B"],"license":"GPL-2.0-or-later"},"lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol":{"keccak256":"0x4e64844c56061cd90e0a80de73534a9166704c43eed579eb83f90bc2780ce968","urls":["bzz-raw://cba4fab5cebdddf644b901994a7f0f52b98885d4c56012f4dc51d52c2bf9de0e","dweb:/ipfs/QmVyyrRmqXrAiapewWunRVgiPVFJHpH2hKiE1py1svMSNV"],"license":"GPL-2.0-or-later"},"lib/v3-core/contracts/interfaces/callback/IUniswapV3MintCallback.sol":{"keccak256":"0x27a9725b8f831a92d16380860c3d348a0b926a7f01b34a54ea6eea78cbdbcd6a","urls":["bzz-raw://7c37ca742c643ca4ba6baadff72b8450c6e340a30f7fea0863dba74030a9bbc7","dweb:/ipfs/QmeKBR6a7tQSX85Q7Lb2wrAWSEFqhC4tTmLo4SzcN3kFmp"],"license":"GPL-2.0-or-later"},"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol":{"keccak256":"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634","urls":["bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5","dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ"],"license":"GPL-2.0-or-later"},"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol":{"keccak256":"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5","urls":["bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7","dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c"],"license":"GPL-2.0-or-later"},"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolErrors.sol":{"keccak256":"0xf80abf13fb1fafc127ba4e792f240dd8ea7c8c893978cdfd8439c27fae9a037b","urls":["bzz-raw://b04fc72a656bbf3631e9c2e67b9870a2d9d235185e833fe050e9606e6816a9aa","dweb:/ipfs/QmUcz4bkEkJ9pwzFu1C3n97hBQ3st9U6qTAqCdyFwddKco"],"license":"GPL-2.0-or-later"},"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol":{"keccak256":"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd","urls":["bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03","dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39"],"license":"GPL-2.0-or-later"},"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol":{"keccak256":"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7","urls":["bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047","dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3"],"license":"GPL-2.0-or-later"},"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol":{"keccak256":"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235","urls":["bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735","dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u"],"license":"GPL-2.0-or-later"},"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol":{"keccak256":"0x44fa2ce1182f6c2f6bead3d1737804bf7e112252ae86e0f2e92f9b8249603f43","urls":["bzz-raw://54154e8665b98d65f5dc91b256551852cb47882180b501b260657122d207c0ea","dweb:/ipfs/QmcfemK1A2PXYrWB5SBFGERpMCderbFRb8BtTzQDj1sUBp"],"license":"GPL-2.0-or-later"},"lib/v3-periphery/contracts/interfaces/IMulticall.sol":{"keccak256":"0xa8f9d0061ee730a522dc4bae6bd5cabb3e997e2c5983da183e912bdca93dfa7b","urls":["bzz-raw://496b68d4f72d58cc83cf51bd9cc9c99aaa46dc3c3df7c951a9e50ba29ee33016","dweb:/ipfs/Qmc3bkXwuRP8mDpcKgvLgbCKn8tD8PGCaBjnLHSPMJCRGD"],"license":"GPL-2.0-or-later"},"lib/v3-periphery/contracts/interfaces/ISelfPermit.sol":{"keccak256":"0xe1a1c072855e687c90317c15b9b6ce81cc683723f73d70e47b40f2f9bad0c2be","urls":["bzz-raw://53b0881a1c55254d157054bd3d1c86982c0f5429bd2a9986c15479f6b71ef678","dweb:/ipfs/Qmc9WZqXzQmqsA3xYxojbx9nXcG3FGuwAjM3opEmRGSnBb"],"license":"GPL-2.0-or-later"},"src/interfaces/IBunniHub.sol":{"keccak256":"0xfdadaec2385b1eb305a580112b6b5c2455a90c16231d7cfbb64e482544e173c9","urls":["bzz-raw://9773705574fc9e14d30424d5a844cddd7f3ae2e12005b4aeb6df5d9f7d264fc8","dweb:/ipfs/QmbAoqRpv4A4FX4oGcRaRCcb3iXU4RvdwxpPUj51mAduU3"],"license":"GPL-3.0"},"src/interfaces/IBunniToken.sol":{"keccak256":"0xb7aab6d89d4aaf545658b03f8cd0bb9cdabcf854818833a29531aa2d86dc6b9e","urls":["bzz-raw://5dab8dd7499a6c33522fffea06e44e2848ebc7ee1d7e3053f3c35d257f652b40","dweb:/ipfs/Qme6ALCnq2QbuQ61pMcraXccbMHXJ9RxuDcZFrARYswi33"],"license":"GPL-3.0"},"src/interfaces/IERC20.sol":{"keccak256":"0x32ee345f3bb39351344db0f378633c94ba8a52cc6d4a5b051cbb4ed77d5b0427","urls":["bzz-raw://10aa0dbd5967aeef1f5b266de28b30728163e61fc88d29d6d890e3d7934bd7ba","dweb:/ipfs/QmT7d3fyE8AcbreoGC4Wqao56zRvpy9johNMTmQhbG6Bmj"],"license":"MIT"},"src/interfaces/ILiquidityManagement.sol":{"keccak256":"0x41972a1b07e8b1d737a74f45f2116aeba76d69d5813f37ac5dcc6d1440611259","urls":["bzz-raw://a762a2a66f64a91617610118b7c1a4bddc67a1f728240ecdeeff99232e98dead","dweb:/ipfs/QmNTh7TxGc4oMMWDZay4orqYkXWcGP1cLZECExSQuBCTiG"],"license":"GPL-2.0-or-later"},"src/interfaces/Structs.sol":{"keccak256":"0xfd794ff3c46b9715e4f922f54477e4fa8dd3a0d8c7da50688e7b32be8a444b78","urls":["bzz-raw://9af9e34d90af3a66bd4368bd4ba0e43c85d72d59edbb36004711b5c7822090f5","dweb:/ipfs/QmWY5g6C32AxBRdL4YNDydSaUky4BrV7W4ynbJPoWdSMte"],"license":"GPL-3.0"}},"version":1},"ast":{"absolutePath":"src/interfaces/IBunniHub.sol","id":12096,"exportedSymbols":{"BunniKey":[12347],"ERC20":[8451],"IBunniHub":[12095],"IBunniToken":[12193],"ILiquidityManagement":[12334],"IMulticall":[9776],"ISelfPermit":[9844],"IUniswapV3Pool":[8566]},"nodeType":"SourceUnit","src":"36:11003:24","nodes":[{"id":11875,"nodeType":"PragmaDirective","src":"36:23:24","nodes":[],"literals":["solidity","0.8",".15"]},{"id":11876,"nodeType":"PragmaDirective","src":"60:19:24","nodes":[],"literals":["abicoder","v2"]},{"id":11878,"nodeType":"ImportDirective","src":"81:88:24","nodes":[],"absolutePath":"lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol","file":"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol","nameLocation":"-1:-1:-1","scope":12096,"sourceUnit":8567,"symbolAliases":[{"foreign":{"id":11877,"name":"IUniswapV3Pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8566,"src":"89:14:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":11880,"nodeType":"ImportDirective","src":"171:85:24","nodes":[],"absolutePath":"lib/v3-periphery/contracts/interfaces/IMulticall.sol","file":"@uniswap/v3-periphery/contracts/interfaces/IMulticall.sol","nameLocation":"-1:-1:-1","scope":12096,"sourceUnit":9777,"symbolAliases":[{"foreign":{"id":11879,"name":"IMulticall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9776,"src":"179:10:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":11882,"nodeType":"ImportDirective","src":"257:87:24","nodes":[],"absolutePath":"lib/v3-periphery/contracts/interfaces/ISelfPermit.sol","file":"@uniswap/v3-periphery/contracts/interfaces/ISelfPermit.sol","nameLocation":"-1:-1:-1","scope":12096,"sourceUnit":9845,"symbolAliases":[{"foreign":{"id":11881,"name":"ISelfPermit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9844,"src":"265:11:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":11884,"nodeType":"ImportDirective","src":"346:47:24","nodes":[],"absolutePath":"lib/solmate/src/tokens/ERC20.sol","file":"solmate/tokens/ERC20.sol","nameLocation":"-1:-1:-1","scope":12096,"sourceUnit":8452,"symbolAliases":[{"foreign":{"id":11883,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8451,"src":"354:5:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":11885,"nodeType":"ImportDirective","src":"395:23:24","nodes":[],"absolutePath":"src/interfaces/Structs.sol","file":"./Structs.sol","nameLocation":"-1:-1:-1","scope":12096,"sourceUnit":12348,"symbolAliases":[],"unitAlias":""},{"id":11887,"nodeType":"ImportDirective","src":"419:46:24","nodes":[],"absolutePath":"src/interfaces/IBunniToken.sol","file":"./IBunniToken.sol","nameLocation":"-1:-1:-1","scope":12096,"sourceUnit":12194,"symbolAliases":[{"foreign":{"id":11886,"name":"IBunniToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12193,"src":"427:11:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":11889,"nodeType":"ImportDirective","src":"466:64:24","nodes":[],"absolutePath":"src/interfaces/ILiquidityManagement.sol","file":"./ILiquidityManagement.sol","nameLocation":"-1:-1:-1","scope":12096,"sourceUnit":12335,"symbolAliases":[{"foreign":{"id":11888,"name":"ILiquidityManagement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12334,"src":"474:20:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":12095,"nodeType":"ContractDefinition","src":"1221:9817:24","nodes":[{"id":11913,"nodeType":"EventDefinition","src":"1871:226:24","nodes":[],"anonymous":false,"documentation":{"id":11897,"nodeType":"StructuredDocumentation","src":"1296:570:24","text":"@notice Emitted when liquidity is increased via deposit\n @param sender The msg.sender address\n @param recipient The address of the account that received the share tokens\n @param bunniKeyHash The hash of the Bunni position's key\n @param liquidity The amount by which liquidity was increased\n @param amount0 The amount of token0 that was paid for the increase in liquidity\n @param amount1 The amount of token1 that was paid for the increase in liquidity\n @param shares The amount of share tokens minted to the recipient"},"eventSelector":"099ba907192cf75889cdbe240a39ddfa9864b9c07b762c5a7ceab21056582ea6","name":"Deposit","nameLocation":"1877:7:24","parameters":{"id":11912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11899,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1910:6:24","nodeType":"VariableDeclaration","scope":11913,"src":"1894:22:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11898,"name":"address","nodeType":"ElementaryTypeName","src":"1894:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11901,"indexed":true,"mutability":"mutable","name":"recipient","nameLocation":"1942:9:24","nodeType":"VariableDeclaration","scope":11913,"src":"1926:25:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11900,"name":"address","nodeType":"ElementaryTypeName","src":"1926:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11903,"indexed":true,"mutability":"mutable","name":"bunniKeyHash","nameLocation":"1977:12:24","nodeType":"VariableDeclaration","scope":11913,"src":"1961:28:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":11902,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1961:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":11905,"indexed":false,"mutability":"mutable","name":"liquidity","nameLocation":"2007:9:24","nodeType":"VariableDeclaration","scope":11913,"src":"1999:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":11904,"name":"uint128","nodeType":"ElementaryTypeName","src":"1999:7:24","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":11907,"indexed":false,"mutability":"mutable","name":"amount0","nameLocation":"2034:7:24","nodeType":"VariableDeclaration","scope":11913,"src":"2026:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11906,"name":"uint256","nodeType":"ElementaryTypeName","src":"2026:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11909,"indexed":false,"mutability":"mutable","name":"amount1","nameLocation":"2059:7:24","nodeType":"VariableDeclaration","scope":11913,"src":"2051:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11908,"name":"uint256","nodeType":"ElementaryTypeName","src":"2051:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11911,"indexed":false,"mutability":"mutable","name":"shares","nameLocation":"2084:6:24","nodeType":"VariableDeclaration","scope":11913,"src":"2076:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11910,"name":"uint256","nodeType":"ElementaryTypeName","src":"2076:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1884:212:24"}},{"id":11930,"nodeType":"EventDefinition","src":"2692:227:24","nodes":[],"anonymous":false,"documentation":{"id":11914,"nodeType":"StructuredDocumentation","src":"2102:585:24","text":"@notice Emitted when liquidity is decreased via withdrawal\n @param sender The msg.sender address\n @param recipient The address of the account that received the collected tokens\n @param bunniKeyHash The hash of the Bunni position's key\n @param liquidity The amount by which liquidity was decreased\n @param amount0 The amount of token0 that was accounted for the decrease in liquidity\n @param amount1 The amount of token1 that was accounted for the decrease in liquidity\n @param shares The amount of share tokens burnt from the sender"},"eventSelector":"39178cca1c18f66c7fcb2662a25ce89c78e21b6388eaff977a30b95a00ecf11d","name":"Withdraw","nameLocation":"2698:8:24","parameters":{"id":11929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11916,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"2732:6:24","nodeType":"VariableDeclaration","scope":11930,"src":"2716:22:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11915,"name":"address","nodeType":"ElementaryTypeName","src":"2716:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11918,"indexed":true,"mutability":"mutable","name":"recipient","nameLocation":"2764:9:24","nodeType":"VariableDeclaration","scope":11930,"src":"2748:25:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11917,"name":"address","nodeType":"ElementaryTypeName","src":"2748:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11920,"indexed":true,"mutability":"mutable","name":"bunniKeyHash","nameLocation":"2799:12:24","nodeType":"VariableDeclaration","scope":11930,"src":"2783:28:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":11919,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2783:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":11922,"indexed":false,"mutability":"mutable","name":"liquidity","nameLocation":"2829:9:24","nodeType":"VariableDeclaration","scope":11930,"src":"2821:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":11921,"name":"uint128","nodeType":"ElementaryTypeName","src":"2821:7:24","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":11924,"indexed":false,"mutability":"mutable","name":"amount0","nameLocation":"2856:7:24","nodeType":"VariableDeclaration","scope":11930,"src":"2848:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11923,"name":"uint256","nodeType":"ElementaryTypeName","src":"2848:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11926,"indexed":false,"mutability":"mutable","name":"amount1","nameLocation":"2881:7:24","nodeType":"VariableDeclaration","scope":11930,"src":"2873:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11925,"name":"uint256","nodeType":"ElementaryTypeName","src":"2873:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11928,"indexed":false,"mutability":"mutable","name":"shares","nameLocation":"2906:6:24","nodeType":"VariableDeclaration","scope":11930,"src":"2898:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11927,"name":"uint256","nodeType":"ElementaryTypeName","src":"2898:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2706:212:24"}},{"id":11943,"nodeType":"EventDefinition","src":"3324:168:24","nodes":[],"anonymous":false,"documentation":{"id":11931,"nodeType":"StructuredDocumentation","src":"2924:395:24","text":"@notice Emitted when fees are compounded back into liquidity\n @param sender The msg.sender address\n @param bunniKeyHash The hash of the Bunni position's key\n @param liquidity The amount by which liquidity was increased\n @param amount0 The amount of token0 added to the liquidity position\n @param amount1 The amount of token1 added to the liquidity position"},"eventSelector":"e8a0353df51d0f27feccd54ad6bb3dec20a5c6666ef44c3146550e1e54ba6a38","name":"Compound","nameLocation":"3330:8:24","parameters":{"id":11942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11933,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"3364:6:24","nodeType":"VariableDeclaration","scope":11943,"src":"3348:22:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11932,"name":"address","nodeType":"ElementaryTypeName","src":"3348:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11935,"indexed":true,"mutability":"mutable","name":"bunniKeyHash","nameLocation":"3396:12:24","nodeType":"VariableDeclaration","scope":11943,"src":"3380:28:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":11934,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3380:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":11937,"indexed":false,"mutability":"mutable","name":"liquidity","nameLocation":"3426:9:24","nodeType":"VariableDeclaration","scope":11943,"src":"3418:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":11936,"name":"uint128","nodeType":"ElementaryTypeName","src":"3418:7:24","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":11939,"indexed":false,"mutability":"mutable","name":"amount0","nameLocation":"3453:7:24","nodeType":"VariableDeclaration","scope":11943,"src":"3445:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11938,"name":"uint256","nodeType":"ElementaryTypeName","src":"3445:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11941,"indexed":false,"mutability":"mutable","name":"amount1","nameLocation":"3478:7:24","nodeType":"VariableDeclaration","scope":11943,"src":"3470:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11940,"name":"uint256","nodeType":"ElementaryTypeName","src":"3470:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3338:153:24"}},{"id":11958,"nodeType":"EventDefinition","src":"3806:181:24","nodes":[],"anonymous":false,"documentation":{"id":11944,"nodeType":"StructuredDocumentation","src":"3497:304:24","text":"@notice Emitted when a new IBunniToken is created\n @param bunniKeyHash The hash of the Bunni position's key\n @param pool The Uniswap V3 pool\n @param tickLower The lower tick of the Bunni's UniV3 LP position\n @param tickUpper The upper tick of the Bunni's UniV3 LP position"},"eventSelector":"a633a76553e9d8d77256f9284d85ae2eb5e5ef445d9e5686e3e6270e2e8fd4a8","name":"NewBunni","nameLocation":"3812:8:24","parameters":{"id":11957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11947,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"3850:5:24","nodeType":"VariableDeclaration","scope":11958,"src":"3830:25:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IBunniToken_$12193","typeString":"contract IBunniToken"},"typeName":{"id":11946,"nodeType":"UserDefinedTypeName","pathNode":{"id":11945,"name":"IBunniToken","nodeType":"IdentifierPath","referencedDeclaration":12193,"src":"3830:11:24"},"referencedDeclaration":12193,"src":"3830:11:24","typeDescriptions":{"typeIdentifier":"t_contract$_IBunniToken_$12193","typeString":"contract IBunniToken"}},"visibility":"internal"},{"constant":false,"id":11949,"indexed":true,"mutability":"mutable","name":"bunniKeyHash","nameLocation":"3881:12:24","nodeType":"VariableDeclaration","scope":11958,"src":"3865:28:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":11948,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3865:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":11952,"indexed":true,"mutability":"mutable","name":"pool","nameLocation":"3926:4:24","nodeType":"VariableDeclaration","scope":11958,"src":"3903:27:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV3Pool_$8566","typeString":"contract IUniswapV3Pool"},"typeName":{"id":11951,"nodeType":"UserDefinedTypeName","pathNode":{"id":11950,"name":"IUniswapV3Pool","nodeType":"IdentifierPath","referencedDeclaration":8566,"src":"3903:14:24"},"referencedDeclaration":8566,"src":"3903:14:24","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV3Pool_$8566","typeString":"contract IUniswapV3Pool"}},"visibility":"internal"},{"constant":false,"id":11954,"indexed":false,"mutability":"mutable","name":"tickLower","nameLocation":"3946:9:24","nodeType":"VariableDeclaration","scope":11958,"src":"3940:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":11953,"name":"int24","nodeType":"ElementaryTypeName","src":"3940:5:24","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":11956,"indexed":false,"mutability":"mutable","name":"tickUpper","nameLocation":"3971:9:24","nodeType":"VariableDeclaration","scope":11958,"src":"3965:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":11955,"name":"int24","nodeType":"ElementaryTypeName","src":"3965:5:24","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"3820:166:24"}},{"id":11965,"nodeType":"EventDefinition","src":"4211:55:24","nodes":[],"anonymous":false,"documentation":{"id":11959,"nodeType":"StructuredDocumentation","src":"3992:214:24","text":"@notice Emitted when protocol fees are paid to the factory\n @param amount0 The amount of token0 protocol fees that is withdrawn\n @param amount1 The amount of token1 protocol fees that is withdrawn"},"eventSelector":"8ff06abbd47998d6c3049811caffedad7aecc341ef315e29f40b58f7a673ee02","name":"PayProtocolFee","nameLocation":"4217:14:24","parameters":{"id":11964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11961,"indexed":false,"mutability":"mutable","name":"amount0","nameLocation":"4240:7:24","nodeType":"VariableDeclaration","scope":11965,"src":"4232:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11960,"name":"uint256","nodeType":"ElementaryTypeName","src":"4232:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11963,"indexed":false,"mutability":"mutable","name":"amount1","nameLocation":"4257:7:24","nodeType":"VariableDeclaration","scope":11965,"src":"4249:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11962,"name":"uint256","nodeType":"ElementaryTypeName","src":"4249:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4231:34:24"}},{"id":11970,"nodeType":"EventDefinition","src":"4385:45:24","nodes":[],"anonymous":false,"documentation":{"id":11966,"nodeType":"StructuredDocumentation","src":"4271:109:24","text":"@notice Emitted when the protocol fee has been updated\n @param newProtocolFee The new protocol fee"},"eventSelector":"dc0410a296e1e33943a772020d333d5f99319d7fcad932a484c53889f7aaa2b1","name":"SetProtocolFee","nameLocation":"4391:14:24","parameters":{"id":11969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11968,"indexed":false,"mutability":"mutable","name":"newProtocolFee","nameLocation":"4414:14:24","nodeType":"VariableDeclaration","scope":11970,"src":"4406:22:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11967,"name":"uint256","nodeType":"ElementaryTypeName","src":"4406:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4405:24:24"}},{"id":11986,"nodeType":"StructDefinition","src":"4984:223:24","nodes":[],"canonicalName":"IBunniHub.DepositParams","members":[{"constant":false,"id":11973,"mutability":"mutable","name":"key","nameLocation":"5024:3:24","nodeType":"VariableDeclaration","scope":11986,"src":"5015:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_BunniKey_$12347_storage_ptr","typeString":"struct BunniKey"},"typeName":{"id":11972,"nodeType":"UserDefinedTypeName","pathNode":{"id":11971,"name":"BunniKey","nodeType":"IdentifierPath","referencedDeclaration":12347,"src":"5015:8:24"},"referencedDeclaration":12347,"src":"5015:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_BunniKey_$12347_storage_ptr","typeString":"struct BunniKey"}},"visibility":"internal"},{"constant":false,"id":11975,"mutability":"mutable","name":"amount0Desired","nameLocation":"5045:14:24","nodeType":"VariableDeclaration","scope":11986,"src":"5037:22:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11974,"name":"uint256","nodeType":"ElementaryTypeName","src":"5037:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11977,"mutability":"mutable","name":"amount1Desired","nameLocation":"5077:14:24","nodeType":"VariableDeclaration","scope":11986,"src":"5069:22:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11976,"name":"uint256","nodeType":"ElementaryTypeName","src":"5069:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11979,"mutability":"mutable","name":"amount0Min","nameLocation":"5109:10:24","nodeType":"VariableDeclaration","scope":11986,"src":"5101:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11978,"name":"uint256","nodeType":"ElementaryTypeName","src":"5101:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11981,"mutability":"mutable","name":"amount1Min","nameLocation":"5137:10:24","nodeType":"VariableDeclaration","scope":11986,"src":"5129:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11980,"name":"uint256","nodeType":"ElementaryTypeName","src":"5129:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11983,"mutability":"mutable","name":"deadline","nameLocation":"5165:8:24","nodeType":"VariableDeclaration","scope":11986,"src":"5157:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11982,"name":"uint256","nodeType":"ElementaryTypeName","src":"5157:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11985,"mutability":"mutable","name":"recipient","nameLocation":"5191:9:24","nodeType":"VariableDeclaration","scope":11986,"src":"5183:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11984,"name":"address","nodeType":"ElementaryTypeName","src":"5183:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"DepositParams","nameLocation":"4991:13:24","scope":12095,"visibility":"public"},{"id":12001,"nodeType":"FunctionDefinition","src":"6203:186:24","nodes":[],"documentation":{"id":11987,"nodeType":"StructuredDocumentation","src":"5213:985:24","text":"@notice Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`\n @dev Must be called after the corresponding BunniToken has been deployed via deployBunniToken()\n @param params The input parameters\n key The Bunni position's key\n amount0Desired The desired amount of token0 to be spent,\n amount1Desired The desired amount of token1 to be spent,\n amount0Min The minimum amount of token0 to spend, which serves as a slippage check,\n amount1Min The minimum amount of token1 to spend, which serves as a slippage check,\n deadline The time by which the transaction must be included to effect the change\n @return shares The new share tokens minted to the sender\n @return addedLiquidity The new liquidity amount as a result of the increase\n @return amount0 The amount of token0 to acheive resulting liquidity\n @return amount1 The amount of token1 to acheive resulting liquidity"},"functionSelector":"b3165aaf","implemented":false,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"6212:7:24","parameters":{"id":11991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11990,"mutability":"mutable","name":"params","nameLocation":"6252:6:24","nodeType":"VariableDeclaration","scope":12001,"src":"6229:29:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_DepositParams_$11986_calldata_ptr","typeString":"struct IBunniHub.DepositParams"},"typeName":{"id":11989,"nodeType":"UserDefinedTypeName","pathNode":{"id":11988,"name":"DepositParams","nodeType":"IdentifierPath","referencedDeclaration":11986,"src":"6229:13:24"},"referencedDeclaration":11986,"src":"6229:13:24","typeDescriptions":{"typeIdentifier":"t_struct$_DepositParams_$11986_storage_ptr","typeString":"struct IBunniHub.DepositParams"}},"visibility":"internal"}],"src":"6219:45:24"},"returnParameters":{"id":12000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11993,"mutability":"mutable","name":"shares","nameLocation":"6323:6:24","nodeType":"VariableDeclaration","scope":12001,"src":"6315:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11992,"name":"uint256","nodeType":"ElementaryTypeName","src":"6315:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11995,"mutability":"mutable","name":"addedLiquidity","nameLocation":"6339:14:24","nodeType":"VariableDeclaration","scope":12001,"src":"6331:22:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":11994,"name":"uint128","nodeType":"ElementaryTypeName","src":"6331:7:24","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":11997,"mutability":"mutable","name":"amount0","nameLocation":"6363:7:24","nodeType":"VariableDeclaration","scope":12001,"src":"6355:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11996,"name":"uint256","nodeType":"ElementaryTypeName","src":"6355:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11999,"mutability":"mutable","name":"amount1","nameLocation":"6380:7:24","nodeType":"VariableDeclaration","scope":12001,"src":"6372:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11998,"name":"uint256","nodeType":"ElementaryTypeName","src":"6372:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6314:74:24"},"scope":12095,"stateMutability":"payable","virtual":false,"visibility":"external"},{"id":12015,"nodeType":"StructDefinition","src":"6900:184:24","nodes":[],"canonicalName":"IBunniHub.WithdrawParams","members":[{"constant":false,"id":12004,"mutability":"mutable","name":"key","nameLocation":"6941:3:24","nodeType":"VariableDeclaration","scope":12015,"src":"6932:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_BunniKey_$12347_storage_ptr","typeString":"struct BunniKey"},"typeName":{"id":12003,"nodeType":"UserDefinedTypeName","pathNode":{"id":12002,"name":"BunniKey","nodeType":"IdentifierPath","referencedDeclaration":12347,"src":"6932:8:24"},"referencedDeclaration":12347,"src":"6932:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_BunniKey_$12347_storage_ptr","typeString":"struct BunniKey"}},"visibility":"internal"},{"constant":false,"id":12006,"mutability":"mutable","name":"recipient","nameLocation":"6962:9:24","nodeType":"VariableDeclaration","scope":12015,"src":"6954:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12005,"name":"address","nodeType":"ElementaryTypeName","src":"6954:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12008,"mutability":"mutable","name":"shares","nameLocation":"6989:6:24","nodeType":"VariableDeclaration","scope":12015,"src":"6981:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12007,"name":"uint256","nodeType":"ElementaryTypeName","src":"6981:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12010,"mutability":"mutable","name":"amount0Min","nameLocation":"7013:10:24","nodeType":"VariableDeclaration","scope":12015,"src":"7005:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12009,"name":"uint256","nodeType":"ElementaryTypeName","src":"7005:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12012,"mutability":"mutable","name":"amount1Min","nameLocation":"7041:10:24","nodeType":"VariableDeclaration","scope":12015,"src":"7033:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12011,"name":"uint256","nodeType":"ElementaryTypeName","src":"7033:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12014,"mutability":"mutable","name":"deadline","nameLocation":"7069:8:24","nodeType":"VariableDeclaration","scope":12015,"src":"7061:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12013,"name":"uint256","nodeType":"ElementaryTypeName","src":"7061:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"WithdrawParams","nameLocation":"6907:14:24","scope":12095,"visibility":"public"},{"id":12028,"nodeType":"FunctionDefinition","src":"8087:142:24","nodes":[],"documentation":{"id":12016,"nodeType":"StructuredDocumentation","src":"7090:992:24","text":"@notice Decreases the amount of liquidity in the position and sends the tokens to the sender.\n If withdrawing ETH, need to follow up with unwrapWETH9() and sweepToken()\n @dev Must be called after the corresponding BunniToken has been deployed via deployBunniToken()\n @param params The input parameters\n key The Bunni position's key\n recipient The user if not withdrawing ETH, address(0) if withdrawing ETH\n shares The amount of share tokens to burn,\n amount0Min The minimum amount of token0 that should be accounted for the burned liquidity,\n amount1Min The minimum amount of token1 that should be accounted for the burned liquidity,\n deadline The time by which the transaction must be included to effect the change\n @return removedLiquidity The amount of liquidity decrease\n @return amount0 The amount of token0 withdrawn to the recipient\n @return amount1 The amount of token1 withdrawn to the recipient"},"functionSelector":"d59bd263","implemented":false,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"8096:8:24","parameters":{"id":12020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12019,"mutability":"mutable","name":"params","nameLocation":"8138:6:24","nodeType":"VariableDeclaration","scope":12028,"src":"8114:30:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawParams_$12015_calldata_ptr","typeString":"struct IBunniHub.WithdrawParams"},"typeName":{"id":12018,"nodeType":"UserDefinedTypeName","pathNode":{"id":12017,"name":"WithdrawParams","nodeType":"IdentifierPath","referencedDeclaration":12015,"src":"8114:14:24"},"referencedDeclaration":12015,"src":"8114:14:24","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawParams_$12015_storage_ptr","typeString":"struct IBunniHub.WithdrawParams"}},"visibility":"internal"}],"src":"8104:46:24"},"returnParameters":{"id":12027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12022,"mutability":"mutable","name":"removedLiquidity","nameLocation":"8177:16:24","nodeType":"VariableDeclaration","scope":12028,"src":"8169:24:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":12021,"name":"uint128","nodeType":"ElementaryTypeName","src":"8169:7:24","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":12024,"mutability":"mutable","name":"amount0","nameLocation":"8203:7:24","nodeType":"VariableDeclaration","scope":12028,"src":"8195:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12023,"name":"uint256","nodeType":"ElementaryTypeName","src":"8195:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12026,"mutability":"mutable","name":"amount1","nameLocation":"8220:7:24","nodeType":"VariableDeclaration","scope":12028,"src":"8212:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12025,"name":"uint256","nodeType":"ElementaryTypeName","src":"8212:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8168:60:24"},"scope":12095,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12039,"nodeType":"FunctionDefinition","src":"8938:115:24","nodes":[],"documentation":{"id":12029,"nodeType":"StructuredDocumentation","src":"8235:698:24","text":"@notice             Updates the swap fees for the given Uniswap V3 pool\n @dev                Must be called after the corresponding BunniToken has been deployed via deployBunniToken()\n                     This function is not part of the original BunniHub codebase, and was added by the Olympus team.\n                     The function enables the BunniManager policy to update the fees, since\n                     IUniswapV3Pool.burn() will update the fees for the caller only.\n @param key          The Bunni position's key\n @return swapFee0    The new swap fee for token0\n @return swapFee1    The new swap fee for token1"},"functionSelector":"5706c20a","implemented":false,"kind":"function","modifiers":[],"name":"updateSwapFees","nameLocation":"8947:14:24","parameters":{"id":12033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12032,"mutability":"mutable","name":"key","nameLocation":"8989:3:24","nodeType":"VariableDeclaration","scope":12039,"src":"8971:21:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_BunniKey_$12347_calldata_ptr","typeString":"struct BunniKey"},"typeName":{"id":12031,"nodeType":"UserDefinedTypeName","pathNode":{"id":12030,"name":"BunniKey","nodeType":"IdentifierPath","referencedDeclaration":12347,"src":"8971:8:24"},"referencedDeclaration":12347,"src":"8971:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_BunniKey_$12347_storage_ptr","typeString":"struct BunniKey"}},"visibility":"internal"}],"src":"8961:37:24"},"returnParameters":{"id":12038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12035,"mutability":"mutable","name":"swapFee0","nameLocation":"9025:8:24","nodeType":"VariableDeclaration","scope":12039,"src":"9017:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12034,"name":"uint256","nodeType":"ElementaryTypeName","src":"9017:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12037,"mutability":"mutable","name":"swapFee1","nameLocation":"9043:8:24","nodeType":"VariableDeclaration","scope":12039,"src":"9035:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12036,"name":"uint256","nodeType":"ElementaryTypeName","src":"9035:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9016:36:24"},"scope":12095,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12052,"nodeType":"FunctionDefinition","src":"9522:131:24","nodes":[],"documentation":{"id":12040,"nodeType":"StructuredDocumentation","src":"9059:458:24","text":"@notice Claims the trading fees earned and uses it to add liquidity.\n @dev Must be called after the corresponding BunniToken has been deployed via deployBunniToken()\n @param key The Bunni position's key\n @return addedLiquidity The new liquidity amount as a result of the increase\n @return amount0 The amount of token0 added to the liquidity position\n @return amount1 The amount of token1 added to the liquidity position"},"functionSelector":"227efac3","implemented":false,"kind":"function","modifiers":[],"name":"compound","nameLocation":"9531:8:24","parameters":{"id":12044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12043,"mutability":"mutable","name":"key","nameLocation":"9567:3:24","nodeType":"VariableDeclaration","scope":12052,"src":"9549:21:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_BunniKey_$12347_calldata_ptr","typeString":"struct BunniKey"},"typeName":{"id":12042,"nodeType":"UserDefinedTypeName","pathNode":{"id":12041,"name":"BunniKey","nodeType":"IdentifierPath","referencedDeclaration":12347,"src":"9549:8:24"},"referencedDeclaration":12347,"src":"9549:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_BunniKey_$12347_storage_ptr","typeString":"struct BunniKey"}},"visibility":"internal"}],"src":"9539:37:24"},"returnParameters":{"id":12051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12046,"mutability":"mutable","name":"addedLiquidity","nameLocation":"9603:14:24","nodeType":"VariableDeclaration","scope":12052,"src":"9595:22:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":12045,"name":"uint128","nodeType":"ElementaryTypeName","src":"9595:7:24","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":12048,"mutability":"mutable","name":"amount0","nameLocation":"9627:7:24","nodeType":"VariableDeclaration","scope":12052,"src":"9619:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12047,"name":"uint256","nodeType":"ElementaryTypeName","src":"9619:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12050,"mutability":"mutable","name":"amount1","nameLocation":"9644:7:24","nodeType":"VariableDeclaration","scope":12052,"src":"9636:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12049,"name":"uint256","nodeType":"ElementaryTypeName","src":"9636:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9594:58:24"},"scope":12095,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12062,"nodeType":"FunctionDefinition","src":"9895:86:24","nodes":[],"documentation":{"id":12053,"nodeType":"StructuredDocumentation","src":"9659:231:24","text":"@notice Deploys the BunniToken contract for a Bunni position. This token\n represents a user's share in the Uniswap V3 LP position.\n @param key The Bunni position's key\n @return token The deployed BunniToken"},"functionSelector":"0b2b685e","implemented":false,"kind":"function","modifiers":[],"name":"deployBunniToken","nameLocation":"9904:16:24","parameters":{"id":12057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12056,"mutability":"mutable","name":"key","nameLocation":"9939:3:24","nodeType":"VariableDeclaration","scope":12062,"src":"9921:21:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_BunniKey_$12347_calldata_ptr","typeString":"struct BunniKey"},"typeName":{"id":12055,"nodeType":"UserDefinedTypeName","pathNode":{"id":12054,"name":"BunniKey","nodeType":"IdentifierPath","referencedDeclaration":12347,"src":"9921:8:24"},"referencedDeclaration":12347,"src":"9921:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_BunniKey_$12347_storage_ptr","typeString":"struct BunniKey"}},"visibility":"internal"}],"src":"9920:23:24"},"returnParameters":{"id":12061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12060,"mutability":"mutable","name":"token","nameLocation":"9974:5:24","nodeType":"VariableDeclaration","scope":12062,"src":"9962:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IBunniToken_$12193","typeString":"contract IBunniToken"},"typeName":{"id":12059,"nodeType":"UserDefinedTypeName","pathNode":{"id":12058,"name":"IBunniToken","nodeType":"IdentifierPath","referencedDeclaration":12193,"src":"9962:11:24"},"referencedDeclaration":12193,"src":"9962:11:24","typeDescriptions":{"typeIdentifier":"t_contract$_IBunniToken_$12193","typeString":"contract IBunniToken"}},"visibility":"internal"}],"src":"9961:19:24"},"scope":12095,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12072,"nodeType":"FunctionDefinition","src":"10283:88:24","nodes":[],"documentation":{"id":12063,"nodeType":"StructuredDocumentation","src":"9987:291:24","text":"@notice Returns the BunniToken contract for a Bunni position. This token\n represents a user's share in the Uniswap V3 LP position.\n If the contract hasn't been created yet, returns 0.\n @param key The Bunni position's key\n @return token The BunniToken contract"},"functionSelector":"056f6b2b","implemented":false,"kind":"function","modifiers":[],"name":"getBunniToken","nameLocation":"10292:13:24","parameters":{"id":12067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12066,"mutability":"mutable","name":"key","nameLocation":"10324:3:24","nodeType":"VariableDeclaration","scope":12072,"src":"10306:21:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_BunniKey_$12347_calldata_ptr","typeString":"struct BunniKey"},"typeName":{"id":12065,"nodeType":"UserDefinedTypeName","pathNode":{"id":12064,"name":"BunniKey","nodeType":"IdentifierPath","referencedDeclaration":12347,"src":"10306:8:24"},"referencedDeclaration":12347,"src":"10306:8:24","typeDescriptions":{"typeIdentifier":"t_struct$_BunniKey_$12347_storage_ptr","typeString":"struct BunniKey"}},"visibility":"internal"}],"src":"10305:23:24"},"returnParameters":{"id":12071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12070,"mutability":"mutable","name":"token","nameLocation":"10364:5:24","nodeType":"VariableDeclaration","scope":12072,"src":"10352:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IBunniToken_$12193","typeString":"contract IBunniToken"},"typeName":{"id":12069,"nodeType":"UserDefinedTypeName","pathNode":{"id":12068,"name":"IBunniToken","nodeType":"IdentifierPath","referencedDeclaration":12193,"src":"10352:11:24"},"referencedDeclaration":12193,"src":"10352:11:24","typeDescriptions":{"typeIdentifier":"t_contract$_IBunniToken_$12193","typeString":"contract IBunniToken"}},"visibility":"internal"}],"src":"10351:19:24"},"scope":12095,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12082,"nodeType":"FunctionDefinition","src":"10627:77:24","nodes":[],"documentation":{"id":12073,"nodeType":"StructuredDocumentation","src":"10377:245:24","text":"@notice Sweeps ERC20 token balances to a recipient. Mainly used for extracting protocol fees.\n Only callable by the owner.\n @param tokenList The list of ERC20 tokens to sweep\n @param recipient The token recipient address"},"functionSelector":"7071f0c4","implemented":false,"kind":"function","modifiers":[],"name":"sweepTokens","nameLocation":"10636:11:24","parameters":{"id":12080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12077,"mutability":"mutable","name":"tokenList","nameLocation":"10665:9:24","nodeType":"VariableDeclaration","scope":12082,"src":"10648:26:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_ERC20_$8451_$dyn_calldata_ptr","typeString":"contract ERC20[]"},"typeName":{"baseType":{"id":12075,"nodeType":"UserDefinedTypeName","pathNode":{"id":12074,"name":"ERC20","nodeType":"IdentifierPath","referencedDeclaration":8451,"src":"10648:5:24"},"referencedDeclaration":8451,"src":"10648:5:24","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$8451","typeString":"contract ERC20"}},"id":12076,"nodeType":"ArrayTypeName","src":"10648:7:24","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_ERC20_$8451_$dyn_storage_ptr","typeString":"contract ERC20[]"}},"visibility":"internal"},{"constant":false,"id":12079,"mutability":"mutable","name":"recipient","nameLocation":"10684:9:24","nodeType":"VariableDeclaration","scope":12082,"src":"10676:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12078,"name":"address","nodeType":"ElementaryTypeName","src":"10676:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10647:47:24"},"returnParameters":{"id":12081,"nodeType":"ParameterList","parameters":[],"src":"10703:0:24"},"scope":12095,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12088,"nodeType":"FunctionDefinition","src":"10850:48:24","nodes":[],"documentation":{"id":12083,"nodeType":"StructuredDocumentation","src":"10710:135:24","text":"@notice Updates the protocol fee value. Scaled by 1e18. Only callable by the owner.\n @param value The new protocol fee value"},"functionSelector":"787dce3d","implemented":false,"kind":"function","modifiers":[],"name":"setProtocolFee","nameLocation":"10859:14:24","parameters":{"id":12086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12085,"mutability":"mutable","name":"value","nameLocation":"10882:5:24","nodeType":"VariableDeclaration","scope":12088,"src":"10874:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12084,"name":"uint256","nodeType":"ElementaryTypeName","src":"10874:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10873:15:24"},"returnParameters":{"id":12087,"nodeType":"ParameterList","parameters":[],"src":"10897:0:24"},"scope":12095,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12094,"nodeType":"FunctionDefinition","src":"10986:50:24","nodes":[],"documentation":{"id":12089,"nodeType":"StructuredDocumentation","src":"10904:77:24","text":"@notice Returns the protocol fee value. Decimal value <1, scaled by 1e18."},"functionSelector":"b0e21e8a","implemented":false,"kind":"function","modifiers":[],"name":"protocolFee","nameLocation":"10995:11:24","parameters":{"id":12090,"nodeType":"ParameterList","parameters":[],"src":"11006:2:24"},"returnParameters":{"id":12093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12092,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":12094,"src":"11027:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12091,"name":"uint256","nodeType":"ElementaryTypeName","src":"11027:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11026:9:24"},"scope":12095,"stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[{"baseName":{"id":11891,"name":"IMulticall","nodeType":"IdentifierPath","referencedDeclaration":9776,"src":"1244:10:24"},"id":11892,"nodeType":"InheritanceSpecifier","src":"1244:10:24"},{"baseName":{"id":11893,"name":"ISelfPermit","nodeType":"IdentifierPath","referencedDeclaration":9844,"src":"1256:11:24"},"id":11894,"nodeType":"InheritanceSpecifier","src":"1256:11:24"},{"baseName":{"id":11895,"name":"ILiquidityManagement","nodeType":"IdentifierPath","referencedDeclaration":12334,"src":"1269:20:24"},"id":11896,"nodeType":"InheritanceSpecifier","src":"1269:20:24"}],"canonicalName":"IBunniHub","contractDependencies":[],"contractKind":"interface","documentation":{"id":11890,"nodeType":"StructuredDocumentation","src":"532:689:24","text":"@title BunniHub\n @author zefram.eth\n @notice The main contract LPs interact with. Each BunniKey corresponds to a BunniToken,\n which is the ERC20 LP token for the Uniswap V3 position specified by the BunniKey.\n Use deposit()/withdraw() to mint/burn LP tokens, and use compound() to compound the swap fees\n back into the LP position.\n @dev    Imported at commit: https://github.com/ZeframLou/bunni/tree/fd65011c4e24660d0a63295cb3812c1821529842\n @dev    The following changes were made from the original source code:\n @dev    - Use solmate ERC20 and SafeTransferLib instead of the local IERC20 and SafeTransferLib\n @dev    - updateSwapFees() function added"},"fullyImplemented":false,"linearizedBaseContracts":[12095,12334,8580,9844,9776],"name":"IBunniHub","nameLocation":"1231:9:24","scope":12096,"usedErrors":[]}],"license":"GPL-3.0"},"id":24}